{"version":3,"sources":["api/users.ts","api/todos.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","index.tsx"],"names":["users","id","name","username","email","address","street","suite","city","zipcode","geo","lat","lng","phone","website","company","catchPhrase","bs","todos","userId","title","completed","UserInfo","className","TodoInfo","user","handleCheckbox","htmlFor","classNames","type","checked","onChange","TodoList","map","todo","App","useState","setTitle","initialTodos","setTodos","isUserInvalid","setIsUserInvalid","isTitleInvalid","setIsTitleInvalid","preparedTodos","find","event","target","newTodos","onSubmit","preventDefault","form","input","elements","newUserName","value","newTitle","newUser","newTodo","length","placeholder","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.591bc502.chunk.js","sourcesContent":["const users = [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n    address: {\n      street: 'Kulas Light',\n      suite: 'Apt. 556',\n      city: 'Gwenborough',\n      zipcode: '92998-3874',\n      geo: {\n        lat: '-37.3159',\n        lng: '81.1496',\n      },\n    },\n    phone: '1-770-736-8031 x56442',\n    website: 'hildegard.org',\n    company: {\n      name: 'Romaguera-Crona',\n      catchPhrase: 'Multi-layered client-server neural-net',\n      bs: 'harness real-time e-markets',\n    },\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n    address: {\n      street: 'Victor Plains',\n      suite: 'Suite 879',\n      city: 'Wisokyburgh',\n      zipcode: '90566-7771',\n      geo: {\n        lat: '-43.9509',\n        lng: '-34.4618',\n      },\n    },\n    phone: '010-692-6593 x09125',\n    website: 'anastasia.net',\n    company: {\n      name: 'Deckow-Crist',\n      catchPhrase: 'Proactive didactic contingency',\n      bs: 'synergize scalable supply-chains',\n    },\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n    address: {\n      street: 'Douglas Extension',\n      suite: 'Suite 847',\n      city: 'McKenziehaven',\n      zipcode: '59590-4157',\n      geo: {\n        lat: '-68.6102',\n        lng: '-47.0653',\n      },\n    },\n    phone: '1-463-123-4447',\n    website: 'ramiro.info',\n    company: {\n      name: 'Romaguera-Jacobson',\n      catchPhrase: 'Face to face bifurcated interface',\n      bs: 'e-enable strategic applications',\n    },\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n    address: {\n      street: 'Hoeger Mall',\n      suite: 'Apt. 692',\n      city: 'South Elvis',\n      zipcode: '53919-4257',\n      geo: {\n        lat: '29.4572',\n        lng: '-164.2990',\n      },\n    },\n    phone: '493-170-9623 x156',\n    website: 'kale.biz',\n    company: {\n      name: 'Robel-Corkery',\n      catchPhrase: 'Multi-tiered zero tolerance productivity',\n      bs: 'transition cutting-edge web services',\n    },\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n    address: {\n      street: 'Skiles Walks',\n      suite: 'Suite 351',\n      city: 'Roscoeview',\n      zipcode: '33263',\n      geo: {\n        lat: '-31.8129',\n        lng: '62.5342',\n      },\n    },\n    phone: '(254)954-1289',\n    website: 'demarco.info',\n    company: {\n      name: 'Keebler LLC',\n      catchPhrase: 'User-centric fault-tolerant solution',\n      bs: 'revolutionize end-to-end systems',\n    },\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n    address: {\n      street: 'Norberto Crossing',\n      suite: 'Apt. 950',\n      city: 'South Christy',\n      zipcode: '23505-1337',\n      geo: {\n        lat: '-71.4197',\n        lng: '71.7478',\n      },\n    },\n    phone: '1-477-935-8478 x6430',\n    website: 'ola.org',\n    company: {\n      name: 'Considine-Lockman',\n      catchPhrase: 'Synchronised bottom-line interface',\n      bs: 'e-enable innovative applications',\n    },\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n    address: {\n      street: 'Rex Trail',\n      suite: 'Suite 280',\n      city: 'Howemouth',\n      zipcode: '58804-1099',\n      geo: {\n        lat: '24.8918',\n        lng: '21.8984',\n      },\n    },\n    phone: '210.067.6132',\n    website: 'elvis.io',\n    company: {\n      name: 'Johns Group',\n      catchPhrase: 'Configurable multimedia task-force',\n      bs: 'generate enterprise e-tailers',\n    },\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n    address: {\n      street: 'Ellsworth Summit',\n      suite: 'Suite 729',\n      city: 'Aliyaview',\n      zipcode: '45169',\n      geo: {\n        lat: '-14.3990',\n        lng: '-120.7677',\n      },\n    },\n    phone: '586.493.6943 x140',\n    website: 'jacynthe.com',\n    company: {\n      name: 'Abernathy Group',\n      catchPhrase: 'Implemented secondary concept',\n      bs: 'e-enable extensible e-tailers',\n    },\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n    address: {\n      street: 'Dayna Park',\n      suite: 'Suite 449',\n      city: 'Bartholomebury',\n      zipcode: '76495-3109',\n      geo: {\n        lat: '24.6463',\n        lng: '-168.8889',\n      },\n    },\n    phone: '(775)976-6794 x41206',\n    website: 'conrad.com',\n    company: {\n      name: 'Yost and Sons',\n      catchPhrase: 'Switchable contextually-based project',\n      bs: 'aggregate real-time technologies',\n    },\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n    address: {\n      street: 'Kattie Turnpike',\n      suite: 'Suite 198',\n      city: 'Lebsackbury',\n      zipcode: '31428-2261',\n      geo: {\n        lat: '-38.2386',\n        lng: '57.2232',\n      },\n    },\n    phone: '024-648-3804',\n    website: 'ambrose.net',\n    company: {\n      name: 'Hoeger LLC',\n      catchPhrase: 'Centralized empowering task-force',\n      bs: 'target end-to-end models',\n    },\n  },\n];\n\nexport default users;\n","/* eslint-disable max-len */\n\nconst todos = [\n  {\n    userId: 1,\n    id: 1,\n    title: 'delectus aut autem',\n    completed: false,\n  },\n  {\n    userId: 1,\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n  },\n];\n\nexport default todos;\n","import React from 'react';\nimport './UserInfo.scss';\nimport { User } from '../../types/User';\n\nexport const UserInfo: React.FC<User> = ({ name, email }) => (\n  <>\n    <h1>{name}</h1>\n    <p className=\"email\">{email}</p>\n  </>\n);\n","import React from 'react';\nimport classNames from 'classnames';\nimport './TodoInfo.scss';\nimport { UserInfo } from '../UserInfo';\nimport { User } from '../../types/User';\nimport { HandleCheckbox } from '../../types/HandleCheckbox';\n\ntype Props = {\n  title: string;\n  completed: boolean;\n  user: User | null;\n  id: number;\n  handleCheckbox: HandleCheckbox;\n};\n\nexport const TodoInfo: React.FC<Props> = ({\n  title,\n  completed,\n  user,\n  id,\n  handleCheckbox,\n}) => (\n  <>\n    <p>{title}</p>\n    <label\n      htmlFor={`${id}`}\n      className={classNames(\n        'todoStatus',\n        {\n          completed,\n        },\n      )}\n    >\n      Completed:\n      <input\n        type=\"checkbox\"\n        id={`${id}`}\n        checked={completed}\n        onChange={handleCheckbox}\n      />\n    </label>\n\n    {user && (\n      <UserInfo {...user} />\n    )}\n  </>\n);\n","import React from 'react';\nimport './TodoList.scss';\nimport { Todo } from '../../types/Todo';\nimport { TodoInfo } from '../TodoInfo';\nimport { HandleCheckbox } from '../../types/HandleCheckbox';\n\ntype Props = {\n  todos: Todo[];\n  handleCheckbox: HandleCheckbox;\n};\n\nexport const TodoList: React.FC<Props> = ({ todos, handleCheckbox }) => (\n  <ul className=\"todoList\">\n    {todos.map((todo) => {\n      const {\n        title,\n        completed,\n        user,\n        id,\n      } = todo;\n\n      return (\n        <li className=\"todoList__item\" key={id}>\n          <TodoInfo\n            title={title}\n            completed={completed}\n            user={user}\n            id={id}\n            handleCheckbox={handleCheckbox}\n          />\n        </li>\n      );\n    })}\n  </ul>\n);\n","import React, { useState } from 'react';\nimport './App.css';\n\nimport users from './api/users';\nimport initialTodos from './api/todos';\nimport { TodoList } from './components/TodoList';\n\nconst App: React.FC = () => {\n  const [title, setTitle] = useState('');\n  const [todos, setTodos] = useState(initialTodos);\n  const [isUserInvalid, setIsUserInvalid] = useState(false);\n  const [isTitleInvalid, setIsTitleInvalid] = useState(false);\n\n  const preparedTodos = todos.map(todo => ({\n    ...todo,\n    user: users.find(\n      user => user.id === todo.userId,\n    ) || null,\n  }));\n\n  const handleTitleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setTitle(event.target.value);\n    setIsTitleInvalid(false);\n  };\n\n  const handleOptionChange = () => {\n    setIsUserInvalid(false);\n  };\n\n  const handleCheckbox = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { id } = event.target;\n    const newTodos = todos.map(todo => {\n      if (todo.id === +id) {\n        return {\n          ...todo,\n          completed: !todo.completed,\n        };\n      }\n\n      return todo;\n    });\n\n    setTodos(newTodos);\n  };\n\n  const handleSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n    setIsUserInvalid(true);\n    const form = event.target as HTMLFormElement;\n    const input = form.elements[0] as HTMLInputElement;\n    const select = form.elements[1] as HTMLSelectElement;\n    const newUserName = select.value;\n    const newTitle = input.value;\n\n    setIsUserInvalid(newUserName === '');\n    setIsTitleInvalid(newTitle === '');\n\n    if (newUserName === '' || newTitle === '') {\n      return;\n    }\n\n    const newUser = users.find(user => user.name === newUserName);\n    let userId = 0;\n\n    if (newUser) {\n      userId = newUser.id;\n    }\n\n    const newTodo = {\n      userId,\n      id: todos.length + 1,\n      title: newTitle,\n      completed: false,\n    };\n\n    setTodos([\n      ...todos,\n      newTodo,\n    ]);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <TodoList\n        todos={preparedTodos}\n        handleCheckbox={handleCheckbox}\n      />\n\n      <form onSubmit={handleSubmit}>\n        <input\n          type=\"text\"\n          placeholder=\"Todo title\"\n          value={title}\n          onChange={handleTitleChange}\n        />\n        {isTitleInvalid && 'Please enter the title'}\n\n        <div />\n\n        <select onChange={handleOptionChange}>\n          <option value=\"\">\n            Choose a user\n          </option>\n\n          {users.map(user => {\n            const { name, id } = user;\n\n            return (\n              <option\n                value={name}\n                key={id}\n              >\n                {name}\n              </option>\n            );\n          })}\n        </select>\n        {isUserInvalid && 'Please choose a user'}\n\n        <div />\n\n        <button type=\"submit\">\n          Add\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}